name: Agile Telegram Notifier
on:
  schedule:
    - cron: '10 02 * * *'    # plan once daily at 22:25
    - cron: '*/30 * * * *'   # run every 30 minutes
  workflow_dispatch:

permissions:
  contents: write

jobs:
  agile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: pip install requests pytz
      
      # Planning step - runs once daily at 22:25
      - name: Plan prices and save schedule
        if: github.event.schedule == '10 02 * * *' || github.event_name == 'workflow_dispatch'
        env:
          HOT_SWITCH_BOT_TOKEN: ${{ secrets.HOT_SWITCH_BOT_TOKEN }}
          AUTOMATIONS_CHANNEL_ID: ${{ secrets.AUTOMATIONS_CHANNEL_ID }}
          MODE: plan
        run: python hot_water_controller.py
      
      - name: Commit schedule to repository
        if: github.event.schedule == '10 02 * * *' || github.event_name == 'workflow_dispatch'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          if [ -f "schedule.json" ]; then
            git add schedule.json
            if git diff --staged --quiet; then
              echo "‚úÖ No changes to schedule.json"
            else
              git commit -m "üìÖ Update schedule for $(date '+%Y-%m-%d %H:%M')"
              git push
              echo "‚úÖ Schedule committed and pushed"
            fi
          else
            echo "‚ùå schedule.json not found"
            exit 1
          fi
      
      # Running step - runs every 30 minutes
      - name: Run message checks
        if: github.event.schedule == '*/30 * * * *'
        env:
          HOT_SWITCH_BOT_TOKEN: ${{ secrets.HOT_SWITCH_BOT_TOKEN }}
          AUTOMATIONS_CHANNEL_ID: ${{ secrets.AUTOMATIONS_CHANNEL_ID }}
          MODE: run
        run: python hot_water_controller.py
      
      - name: Update schedule after sending messages
        if: github.event.schedule == '*/30 * * * *'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          if git diff --quiet schedule.json; then
            echo "‚úÖ No messages were sent, schedule unchanged"
          else
            git add schedule.json
            git commit -m "üì§ Update schedule after sending messages $(date '+%Y-%m-%d %H:%M')"
            git push
            echo "‚úÖ Updated schedule committed"
          fi
